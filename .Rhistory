numSample=30
M=15
numTime=100
ret = true_data_Cond3(K=K, numSample=numSample, M=M, numTime=numtime,bias=1)
psi_tru = ret[[1]]
ret = true_data_Cond3(K=K, numSample=numSample, M=M, numTime=numTime,bias=1)
psi_tru = ret[[1]]
theta_tru = ret[[3]]
phi_tru = ret[[2]]
h_tru = ret[[4]]
w_tru = ret[[5]]
lambda = psi_tru %*% (theta_tru * h_tru)
data <- matrix(NA,15,3000)
for(i in 1:15){
data[i,] = rpois(30*100,lambda[i,])
}
out = dpfa:::mult_cpp(data,psi_tru,theta_tru, h_tru)
x_pk = out[[1]]
x_kn = out[[2]]
# vector memory limit at 10000 iters
# need 5000 iters
# max correlation between theta_est and theta_true is .8
# not using true H messes up estimation of theta
# but setting H to all 1's messes up theta
dpfa.out = dpfa_noW(data,
K=3,
N=30,
M=15,
alpha_phi=1,
numTime=100,
niter=100,
bias_init=1,
rk_init=1,
p0=.5,
init_con_H=1,
# W_true=w_tru)
H_true=h_tru,
theta_true=theta_tru,
#phi_true=phi_tru)
psi_true=psi_tru)
cor(t(theta_tru),t(dpfa.out$theta_est))
head(t(dpfa.out$theta_est))
head(t(theta_tru))
summary(t(theta_tru))
summary(t(dpfa.out$theta_est))
dpfa.out$psi_est
dpfa.out$phi_est
summary(t(dpfa.out$ZZip_est))
summary(t(h_tru))
cor(t(h_tru))
round(cor(t(h_tru),t(dpfa.out$ZZip_est)),2)
cor(t(h_tru))
setwd("/Volumes/GoogleDrive/Shared drives/SLAM Lab/dpfa_sim")
#source("true_data_Cond1.R")
#source("true_data_Cond2.R")
source("true_data_Cond3.R")
K = 3
numSample=30
M=15
numTime=100
ret = true_data_Cond3(K=K, numSample=numSample, M=M, numTime=numTime,bias=1)
psi_tru = ret[[1]]
theta_tru = ret[[3]]
phi_tru = ret[[2]]
h_tru = ret[[4]]
w_tru = ret[[5]]
lambda = psi_tru %*% (theta_tru * h_tru)
data <- matrix(NA,15,3000)
for(i in 1:15){
data[i,] = rpois(30*100,lambda[i,])
}
out = dpfa:::mult_cpp(data,psi_tru,theta_tru, h_tru)
x_pk = out[[1]]
x_kn = out[[2]]
rgamma(K,1e5)*(1/1e5)
Pi_k = rbeta(K,shape1 = 1 + rowSums(h_tru),shape2=1 + numTotal*numTime - rowSums(h_tru));
numTotal=numTime*numSample
H = sample_Z(x_kn , .5, rep(1,K), phi_tru,theta_tru, rgamma(K,1e5)*(1/1e5), .5,C_k1n, numSample,Pi_k,h_tru)
H = dpfa:::sample_Z(x_kn , .5, rep(1,K), phi_tru,theta_tru, rgamma(K,1e5)*(1/1e5), .5,C_k1n, numSample,Pi_k,h_tru)
Pi_k = rbeta(K,shape1 = 1 + rowSums(h_tru),shape2=1 + numTotal*numTime - rowSums(h_tru));
H = dpfa:::sample_Z(x_kn , .5, rep(1,K), phi_tru,theta_tru, rgamma(K,1e5)*(1/1e5), .5,C_k1n, numSample,Pi_k,h_tru)
H
summary(t(H))
str(H)
H = dpfa:::sample_Z(x_kn , .5, rep(1,K), phi_tru,theta_tru, rgamma(K,1e5)*(1/1e5), .5,C_k1n, numSample,Pi_k,h_tru)[[1]]
summary(t(H))
cor(t(H),t(h_tru))
?ones
?ones
H = dpfa:::sample_Z(x_kn , .5, rep(1,K), phi_tru,matrix(1,nrow=nrow(theta_tru),ncol(theta_tru)), rgamma(K,1e5)*(1/1e5), .5,C_k1n, numSample,Pi_k,h_tru)[[1]]
summary(t(H))
cor(t(H),t(h_tru))
library(dpfa)
# vector memory limit at 10000 iters
# need 5000 iters
# max correlation between theta_est and theta_true is .8
# not using true H messes up estimation of theta
# but setting H to all 1's messes up theta
dpfa.out = dpfa_noW(data,
K=3,
N=30,
M=15,
alpha_phi=1,
numTime=100,
niter=100,
bias_init=1,
rk_init=1,
p0=.5,
init_con_H=1,
# W_true=w_tru)
# H_true=h_tru,
theta_true=theta_tru,
#phi_true=phi_tru)
psi_true=psi_tru)
library(dpfa)
# vector memory limit at 10000 iters
# need 5000 iters
# max correlation between theta_est and theta_true is .8
# not using true H messes up estimation of theta
# but setting H to all 1's messes up theta
dpfa.out = dpfa_noW(data,
K=3,
N=30,
M=15,
alpha_phi=1,
numTime=100,
niter=100,
bias_init=1,
rk_init=1,
p0=.5,
init_con_H=1,
# W_true=w_tru)
# H_true=h_tru,
theta_true=theta_tru,
#phi_true=phi_tru)
psi_true=psi_tru)
mean(H=h_true)
mean(H=h_tru)
mean(H==h_tru)
H = dpfa:::sample_Z(x_kn , .5, rep(1,K), phi_tru,theta_tru, rgamma(K,1e5)*(1/1e5), .5,C_k1n, numSample,Pi_k,h_tru)[[1]]
summary(t(H))
cor(t(H),t(h_tru))
mean(H==h_tru)
cor(t(theta_tru),t(dpfa.out$theta_est))
head(t(dpfa.out$theta_est))
head(t(theta_tru))
summary(t(theta_tru))
summary(t(dpfa.out$theta_est))
dpfa.out$psi_est
dpfa.out$phi_est
summary(t(dpfa.out$ZZip_est))
summary(t(h_tru))
cor(t(h_tru))
round(cor(t(h_tru),t(dpfa.out$ZZip_est)),2)
summary(t(dpfa.out$ZZip_est))
summary(t(h_tru))
H = dpfa:::sample_Z(x_kn , .5, rep(1,K), phi_tru,w_tru, rgamma(K,1e5)*(1/1e5), .5,C_k1n, numSample,Pi_k,h_tru)[[1]]
summary(t(H))
cor(t(H),t(h_tru))
mean(H==h_tru)
#source("true_data_Cond1.R")
#source("true_data_Cond2.R")
source("true_data_Cond3.R")
K = 3
numSample=30
M=15
numTime=100
numTotal=numTime*numSample
ret = true_data_Cond3(K=K, numSample=numSample, M=M, numTime=numTime,bias=1)
psi_tru = ret[[1]]
theta_tru = ret[[3]]
phi_tru = ret[[2]]
h_tru = ret[[4]]
w_tru = ret[[5]]
lambda = psi_tru %*% (theta_tru * h_tru)
data <- matrix(NA,15,3000)
for(i in 1:15){
data[i,] = rpois(30*100,lambda[i,])
}
out = dpfa:::mult_cpp(data,psi_tru,theta_tru, h_tru)
x_pk = out[[1]]
x_kn = out[[2]]
Theta_3D = dpfa:::matrix_to_array(theta_tru, K, numSample,numTime)
ZZip_3D = dpfa:::matrix_to_array(h_tru,K, numSample,numTime)
C_kn <- dpfa:::calcC_kn(Theta_3D, rep(1,K), Theta_3D, phi_tru)
C_kn = matrix(C_kn, nrow=K,byrow=F) # was byrow=F
out2 = dpfa:::mult_cpp(C_kn,phi_tru,theta_tru, h_tru)
C_kk1 = out2[[1]]
C_k1n = out2[[2]]
C_kk1/rowSums(C_kk1)
Phi <- rdirichlet(3,1+C_kk1)
Pi_k = rbeta(K,shape1 = 1 + rowSums(h_tru),shape2=1 + numTotal*numTime - rowSums(h_tru));
H = dpfa:::sample_Z(x_kn , .5, rep(1,K), phi_tru,w_tru, rgamma(K,1e5)*(1/1e5), .5,C_k1n, numSample,Pi_k,h_tru)[[1]]
summary(t(H))
cor(t(H),t(h_tru))
mean(H==h_tru)
# vector memory limit at 10000 iters
# need 5000 iters
# max correlation between theta_est and theta_true is .8
# not using true H messes up estimation of theta
# but setting H to all 1's messes up theta
dpfa.out = dpfa_noW(data,
K=3,
N=30,
M=15,
alpha_phi=1,
numTime=100,
niter=100,
bias_init=1,
rk_init=1,
p0=.5,
init_con_H=1,
# W_true=w_tru)
# H_true=h_tru,
theta_true=theta_tru,
#phi_true=phi_tru)
psi_true=psi_tru)
cor(t(theta_tru),t(dpfa.out$theta_est))
head(t(dpfa.out$theta_est))
head(t(theta_tru))
summary(t(theta_tru))
summary(t(dpfa.out$theta_est))
dpfa.out$psi_est
dpfa.out$phi_est
summary(t(dpfa.out$ZZip_est))
summary(t(h_tru))
library(dpfa)
# vector memory limit at 10000 iters
# need 5000 iters
# max correlation between theta_est and theta_true is .8
# not using true H messes up estimation of theta
# but setting H to all 1's messes up theta
dpfa.out = dpfa_noW(data,
K=3,
N=30,
M=15,
alpha_phi=1,
numTime=100,
niter=100,
bias_init=1,
rk_init=1,
p0=.5,
init_con_H=1,
# W_true=w_tru)
# H_true=h_tru,
theta_true=theta_tru,
#phi_true=phi_tru)
psi_true=psi_tru)
dpfa.out$psi_est
dpfa.out$phi_est
summary(t(dpfa.out$ZZip_est))
summary(t(h_tru))
cor(t(h_tru))
round(cor(t(h_tru),t(dpfa.out$ZZip_est)),2)
# vector memory limit at 10000 iters
# need 5000 iters
# max correlation between theta_est and theta_true is .8
# not using true H messes up estimation of theta
# but setting H to all 1's messes up theta
dpfa.out = dpfa_noW(data,
K=3,
N=30,
M=15,
alpha_phi=1,
numTime=100,
niter=1000,
bias_init=1,
rk_init=1,
p0=.5,
init_con_H=1,
# W_true=w_tru)
# H_true=h_tru,
theta_true=theta_tru,
#phi_true=phi_tru)
psi_true=psi_tru)
cor(t(theta_tru),t(dpfa.out$theta_est))
head(t(dpfa.out$theta_est))
head(t(theta_tru))
summary(t(theta_tru))
summary(t(dpfa.out$theta_est))
dpfa.out$psi_est
dpfa.out$phi_est
summary(t(dpfa.out$ZZip_est))
summary(t(h_tru))
cor(t(h_tru))
round(cor(t(h_tru),t(dpfa.out$ZZip_est)),2)
psi_tru
psi_tru = ret[[1]]
theta_tru = ret[[3]]
phi_tru = ret[[2]]
h_tru = ret[[4]]
w_tru = ret[[5]]
lambda = psi_tru %*% (theta_tru * h_tru)
data <- matrix(NA,15,3000)
for(i in 1:15){
data[i,] = rpois(30*100,lambda[i,])
}
out = dpfa:::mult_cpp(data,psi_tru,theta_tru, h_tru)
x_pk = out[[1]]
x_kn = out[[2]]
Theta_3D = dpfa:::matrix_to_array(theta_tru, K, numSample,numTime)
ZZip_3D = dpfa:::matrix_to_array(h_tru,K, numSample,numTime)
C_kn <- dpfa:::calcC_kn(Theta_3D, rep(1,K), Theta_3D, phi_tru)
C_kn = matrix(C_kn, nrow=K,byrow=F) # was byrow=F
out2 = dpfa:::mult_cpp(C_kn,phi_tru,theta_tru, h_tru)
C_kk1 = out2[[1]]
C_k1n = out2[[2]]
C_kk1/rowSums(C_kk1)
Phi <- rdirichlet(3,1+C_kk1)
Pi_k = rbeta(K,shape1 = 1 + rowSums(h_tru),shape2=1 + numTotal*numTime - rowSums(h_tru));
H = dpfa:::sample_Z(x_kn , .5, rep(1,K), phi_tru,w_tru, rgamma(K,1e5)*(1/1e5), .5,C_k1n, numSample,Pi_k,h_tru)[[1]]
summary(t(H))
cor(t(H),t(h_tru))
mean(H==h_tru)
library(dpfa)
# vector memory limit at 10000 iters
# need 5000 iters
# max correlation between theta_est and theta_true is .8
# not using true H messes up estimation of theta
# but setting H to all 1's messes up theta
dpfa.out = dpfa_noW(data,
K=3,
N=30,
M=15,
alpha_phi=1,
numTime=100,
niter=100,
bias_init=1,
rk_init=1,
p0=.5,
init_con_H=1,
# W_true=w_tru)
# H_true=h_tru,
theta_true=theta_tru,
phi_true=phi_tru,
psi_true=psi_tru)
cor(t(theta_tru),t(dpfa.out$theta_est))
head(t(dpfa.out$theta_est))
head(t(theta_tru))
summary(t(theta_tru))
summary(t(dpfa.out$theta_est))
dpfa.out$psi_est
dpfa.out$phi_est
summary(t(dpfa.out$ZZip_est))
summary(t(h_tru))
cor(t(h_tru))
round(cor(t(h_tru),t(dpfa.out$ZZip_est)),2)
H = dpfa:::sample_Z(x_kn , .5, rep(1,K), phi_tru,theta_tru, rgamma(K,1e5)*(1/1e5), .5,C_k1n, numSample,Pi_k,h_tru)[[1]]
summary(t(H))
cor(t(H),t(h_tru))
mean(H==h_tru)
library(dpfa)
# vector memory limit at 10000 iters
# need 5000 iters
# max correlation between theta_est and theta_true is .8
# not using true H messes up estimation of theta
# but setting H to all 1's messes up theta
dpfa.out = dpfa_noW(data,
K=3,
N=30,
M=15,
alpha_phi=1,
numTime=100,
niter=100,
bias_init=1,
rk_init=1,
p0=.5,
init_con_H=1,
# W_true=w_tru)
H_true=h_tru,
theta_true=theta_tru,
#phi_true=phi_tru,
psi_true=psi_tru)
cor(t(theta_tru),t(dpfa.out$theta_est))
head(t(dpfa.out$theta_est))
head(t(theta_tru))
summary(t(theta_tru))
summary(t(dpfa.out$theta_est))
dpfa.out$psi_est
dpfa.out$phi_est
summary(t(dpfa.out$ZZip_est))
summary(t(h_tru))
cor(t(h_tru))
round(cor(t(h_tru),t(dpfa.out$ZZip_est)),2)
# vector memory limit at 10000 iters
# need 5000 iters
# max correlation between theta_est and theta_true is .8
# not using true H messes up estimation of theta
# but setting H to all 1's messes up theta
dpfa.out = dpfa_noW(data,
K=3,
N=30,
M=15,
alpha_phi=1,
numTime=100,
niter=1000,
bias_init=1,
rk_init=1,
p0=.5,
init_con_H=1,
# W_true=w_tru)
H_true=h_tru,
theta_true=theta_tru,
#phi_true=phi_tru,
psi_true=psi_tru)
dpfa.out$phi_est
# vector memory limit at 10000 iters
# need 5000 iters
# max correlation between theta_est and theta_true is .8
# not using true H messes up estimation of theta
# but setting H to all 1's messes up theta
dpfa.out = dpfa_noW(data,
K=3,
N=30,
M=15,
alpha_phi=1,
numTime=100,
niter=10000,
bias_init=1,
rk_init=1,
p0=.5,
init_con_H=1,
# W_true=w_tru)
H_true=h_tru,
theta_true=theta_tru,
#phi_true=phi_tru,
psi_true=psi_tru)
dpfa.out$phi_est
phi_tru
setwd("/Volumes/GoogleDrive/Shared drives/SLAM Lab/dpfa_sim")
#source("true_data_Cond1.R")
#source("true_data_Cond2.R")
source("true_data_Cond3.R")
K = 3
numSample=30
M=15
numTime=100
numTotal=numTime*numSample
ret = true_data_Cond3(K=K, numSample=numSample, M=M, numTime=numTime,bias=1)
psi_tru = ret[[1]]
theta_tru = ret[[3]]
phi_tru = ret[[2]]
h_tru = ret[[4]]
w_tru = ret[[5]]
lambda = psi_tru %*% (theta_tru * h_tru)
data <- matrix(NA,15,3000)
for(i in 1:15){
data[i,] = rpois(30*100,lambda[i,])
}
out = dpfa:::mult_cpp(data,psi_tru,theta_tru, h_tru)
x_pk = out[[1]]
x_kn = out[[2]]
Theta_3D = dpfa:::matrix_to_array(theta_tru, K, numSample,numTime)
ZZip_3D = dpfa:::matrix_to_array(h_tru,K, numSample,numTime)
C_kn <- dpfa:::calcC_kn(Theta_3D, rep(1,K), Theta_3D, phi_tru)
C_kn = matrix(C_kn, nrow=K,byrow=F) # was byrow=F
out2 = dpfa:::mult_cpp(C_kn,phi_tru,theta_tru, h_tru)
C_kk1 = out2[[1]]
C_k1n = out2[[2]]
C_kk1/rowSums(C_kk1)
Phi <- rdirichlet(3,1+C_kk1)
Pi_k = rbeta(K,shape1 = 1 + rowSums(h_tru),shape2=1 + numTotal*numTime - rowSums(h_tru));
H = dpfa:::sample_Z(x_kn , .5, rep(1,K), phi_tru,theta_tru, rgamma(K,1e5)*(1/1e5), .5,C_k1n, numSample,Pi_k,h_tru)[[1]]
summary(t(H))
cor(t(H),t(h_tru))
mean(H==h_tru)
# vector memory limit at 10000 iters
# need 5000 iters
# max correlation between theta_est and theta_true is .8
# not using true H messes up estimation of theta
# but setting H to all 1's messes up theta
dpfa.out = dpfa_noW(data,
K=3,
N=30,
M=15,
alpha_phi=1,
numTime=100,
niter=1000,
bias_init=1,
rk_init=1,
p0=.5,
init_con_H=1,
# W_true=w_tru)
H_true=h_tru,
theta_true=theta_tru,
#phi_true=phi_tru,
psi_true=psi_tru)
dpfa.out$phi_est
phi_tru
# vector memory limit at 10000 iters
# need 5000 iters
# max correlation between theta_est and theta_true is .8
# not using true H messes up estimation of theta
# but setting H to all 1's messes up theta
dpfa.out = dpfa_noW(data,
K=3,
N=30,
M=15,
alpha_phi=1,
numTime=100,
niter=10000,
bias_init=1,
rk_init=1,
p0=.5,
init_con_H=1,
# W_true=w_tru)
H_true=h_tru,
theta_true=theta_tru,
#phi_true=phi_tru,
psi_true=psi_tru)
dpfa.out$phi_est
rdirichlet(3,1+C_kk1)
